---
- name: Print the gateway for each host when defined
  ansible.builtin.debug:
    msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}
  when: ansible_default_ipv4.gateway is defined

- name: Display all variables/facts known for a host
  ansible.builtin.debug:
    var: hostvars[inventory_hostname]
    verbosity: 4

- name: Show configured default become user
  debug: msg="{{ lookup('config', 'DEFAULT_BECOME_USER')}}"

- name: print out role paths
  debug:
    msg: "These are the configured role paths: {{lookup('config', 'DEFAULT_ROLES_PATH')}}"

- name: find retry files, skip if missing that key
  find:
    paths: "{{lookup('config', 'RETRY_FILES_SAVE_PATH')|default(playbook_dir, True)}}"
    patterns: "*.retry"

- name: see the colors
  debug: msg="{{item}}"
  loop: "{{lookup('config', 'COLOR_OK', 'COLOR_CHANGED', 'COLOR_SKIP', wantlist=True)}}"

- name: show remote user and port for ssh connection
  debug: msg={{q("config", "remote_user", "port", plugin_type="connection", plugin_name="ssh", on_missing='skip')}}

- name: show remote_tmp setting for shell (sh) plugin
  debug: msg={{q("config", "remote_tmp", plugin_type="shell", plugin_name="sh")}}

- name: Ensure a job that runs at 2 and 5 exists. Creates an entry like "0 5,2 * * ls -alh > /dev/null"
  ansible.builtin.cron:
    name: "check dirs"
    minute: "0"
    hour: "5,2"
    job: "ls -alh > /dev/null"

- name: Install iptables packages (Ubuntu)
  action: apt pkg={{item}} update_cache=yes
  with_items:
    - iptables
    - iptables-persistent
  tags: iptables

- name: set_fact destfile=/etc/iptables/rules.v4
  action: set_fact destfile=/etc/iptables/rules.v4
  when: is_docker_container is not defined
  tags: iptables

- name: restart iptables
  become: yes
  service: name=iptables enabled=yes state=restarted

- name: Allow related and established connections
  ansible.builtin.iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
  become: yes

- name: Allow new incoming SYN packets on TCP port 22 (SSH)
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 22
    ctstate: NEW
    syn: match
    jump: ACCEPT
    comment: Accept new SSH connections.

- name: Collect only selected facts
  ansible.builtin.setup:
    filter:
      - 'ansible_distribution'
      - 'ansible_machine_id'
      - 'ansible_*_mb'
