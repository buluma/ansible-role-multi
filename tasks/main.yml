---
# Include variables and define needed variables.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include variables for Amazon Linux.
  include_vars: "AmazonLinux.yml"
  when:
    - ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "NA"

- name: Define apache_packages.
  ansible.builtin.set_fact:
    apache_packages: "{{ __apache_packages | list }}"
  when: apache_packages is not defined

# Setup/install.
- name: Setup.
  include_tasks: "setup-{{ ansible_os_family }}.yml"

# IP Tables config.
- name: IP Tables Configure.
  include_tasks: "iptables.yml"

# Configure.
- name: Configure.
  include_tasks: "configure-{{ ansible_os_family }}.yml"

- name: create random but idempotent password
  set_fact:
    password: "{{ lookup('password', '/dev/null', seed=inventory_hostname) }}"

# TODO: Add when
- name: Set authorized key for user ubuntu copying it from current user
  ansible.posix.authorized_key:
    user: ubuntu
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

- name: Gather information about active zones
  ansible.posix.firewalld_info:
    active_zones: yes

- name: Gather information about specific zones
  ansible.posix.firewalld_info:
    zones:
      - public
      - external
      - internal

# Selinux
- name: Enable SELinux
  ansible.posix.selinux:
    policy: targeted
    state: enforcing

- name: Put SELinux in permissive mode, logging actions that would be blocked.
  ansible.posix.selinux:
    policy: targeted
    state: permissive
